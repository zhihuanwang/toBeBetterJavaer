import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,e as r,o as n}from"./app-BeHkqkE2.js";const i={};function o(s,a){return n(),t("div",null,a[0]||(a[0]=[r(`<h1 id="第十六节-jvm-性能监控之-arthas-篇" tabindex="-1"><a class="header-anchor" href="#第十六节-jvm-性能监控之-arthas-篇"><span>第十六节：JVM 性能监控之 Arthas 篇</span></a></h1><p>Arthas 是阿里开源的一款线上 Java 诊断神器，通过全局的视角可以查看应用程序的内存、GC、线程等状态信息，并且能够在不修改代码的情况下，对业务问题进行诊断，包括查看方法的参数调用、执行时间、异常堆栈等信息，大大提升了生产环境中问题排查的效率。</p><p>Arthas 的官方网站是 <a href="https://arthas.aliyun.com/doc/" target="_blank" rel="noopener noreferrer">https://arthas.aliyun.com/doc/</a>，目前最新的版本是 3.7.2。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109102105.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>比我们前面介绍的<a href="https://javabetter.cn/jvm/console-tools.html" target="_blank" rel="noopener noreferrer">命令行工具</a>和<a href="https://javabetter.cn/jvm/view-tools.html" target="_blank" rel="noopener noreferrer">可视化工具</a>，都要强大得多，如果你再遇到下面这些问题，就可以迎刃而解了。</p><ul><li>客户线上问题，应该如何复现，让客户再点一下吗？</li><li>异常被吃掉，手足无措，看是哪个家伙写的，竟然是自己！</li><li>排查别人线上的 bug，不仅代码还没看懂，还没一行日志，捏了一把汗！</li><li>预发 debug，稍微时间长点，群里就怨声载道！</li><li>加日志重新部署，半个小时就没了，问题还没有找到，头顶的灯却早已照亮了整层楼......</li><li>线上机器不能 debug，也不能开 debug 端口，重新部署会不会破坏现场呢?</li><li>怀疑入参有问题，怀疑合并代码有问题，怀疑没有部署成功，全是问号......</li><li>一个问题排查一天，被 Diss 排查问题慢......</li></ul><p>星球里也有球友一直在呼唤 Arthas 的教程，那这篇内容我们就来详细地盘一盘。</p><h2 id="安装-arthas" tabindex="-1"><a class="header-anchor" href="#安装-arthas"><span>安装 Arthas</span></a></h2><h3 id="macos-安装" tabindex="-1"><a class="header-anchor" href="#macos-安装"><span>macOS 安装</span></a></h3><p>我们先在本地试一下哈，由于我本机是 macOS，所以我这里就以 macOS 为例，Windows 用户可以参考<a href="https://arthas.aliyun.com/doc/download.html" target="_blank" rel="noopener noreferrer">官方文档</a>，非常简单。</p><p>我本机已经启动了<a href="https://paicoding.com/" target="_blank" rel="noopener noreferrer">技术派</a>项目，我们就以技术派为例，来看看 Arthas 的使用。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109104013.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>官方推荐的方式是通过 arthas-boot 来安装，那我们就按照这种来：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>curl -O https://arthas.aliyun.com/arthas-boot.jar</span></span>
<span class="line"><span>java -jar arthas-boot.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完上述命令后，Arthas 会列出可以进行监控的 Java 进程，比如说下图中的第 2 个 <code>[2]: 79209 com.github.paicoding.forum.web.QuickForumApplication</code> 就是技术派的进程，直接输入 <code>2</code>，然后回车。Arthas 会连接到技术派的进程上，并输出带有 Arthas 的日志，进入 Arthas 的命令交互界面。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109104757.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="linux-安装" tabindex="-1"><a class="header-anchor" href="#linux-安装"><span>Linux 安装</span></a></h3><p>本地 OK 后，我们来试一下服务器上的项目，技术派是部署在腾讯云的香港服务器上，我们先登录到服务器上，然后执行下面的命令获取 arthas-boot.jar：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>curl -O https://arthas.aliyun.com/arthas-boot.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后执行 <code>java -jar arthas-boot.jar</code>，Arthas 会列出可以进行监控的 Java 进程，我们输入 <code>1</code>，然后回车，Arthas 就会连接到技术派的进程上，并输出带有 Arthas 的日志，进入 Arthas 的命令交互界面。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109105744.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>OK，非常简单，相信大家都能搞定。</p><h3 id="idea-arthas-插件" tabindex="-1"><a class="header-anchor" href="#idea-arthas-插件"><span>IDEA Arthas 插件</span></a></h3><p>Arthas 也提供了 IDEA 插件，可以直接在 IDEA 中使用 Arthas，非常方便，我们来看看怎么安装。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109110348.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>官方文档：</p><blockquote><p><a href="https://www.yuque.com/arthas-idea-plugin/help" target="_blank" rel="noopener noreferrer">https://www.yuque.com/arthas-idea-plugin/help</a></p></blockquote><h2 id="arthas-常用命令" tabindex="-1"><a class="header-anchor" href="#arthas-常用命令"><span>Arthas 常用命令</span></a></h2><p>Arthas 提供了非常多的命令供我们使用，比如说和 JVM 相关的：</p><ul><li><code>dashboard</code>：查看 JVM 的实时数据，包括 CPU、内存、GC、线程等信息。</li><li><code>jvm</code>：查看 JVM 的信息，包括 JVM 参数、类加载器、类信息、线程信息等。</li><li><code>sysprop</code>：查看和修改 JVM 的系统属性。</li><li><code>vmoption</code>：查看和修改 JVM 的启动参数。</li><li><code>heapdump</code>：生成堆内存快照，类似于 <a href="https://javabetter.cn/jvm/console-tools.html" target="_blank" rel="noopener noreferrer">jmap</a> 命令。</li></ul><p>比如说和类加载相关的：</p><ul><li><code>sc</code>：查看类的信息，包括类的结构、方法、字段等。</li><li><code>sm</code>：查看方法的信息，包括方法的参数、返回值、异常等。</li></ul><p>比如说和方法调用相关的：</p><ul><li><code>tt</code>：统计方法的调用次数和耗时。</li><li><code>trace</code>：跟踪方法的调用过程，包括方法的参数、返回值、异常等。</li><li><code>monitor</code>：监控方法的调用过程。</li></ul><p>我来带大家体验一些比较常用的命令，其他的命令大家可以参考<a href="https://arthas.aliyun.com/doc/commands.html" target="_blank" rel="noopener noreferrer">官方文档</a>。</p><h3 id="dashboard-命令" tabindex="-1"><a class="header-anchor" href="#dashboard-命令"><span>dashboard 命令</span></a></h3><p>dashboard 命令可以查看 JVM 的实时数据，包括线程、内存、线程、运行时参数等。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109112718.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="thread-命令" tabindex="-1"><a class="header-anchor" href="#thread-命令"><span>thread 命令</span></a></h3><p>thread 命令可以查看线程的信息，包括线程的状态、线程的堆栈等。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109113001.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>thread 命令的参数如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 打印当前最忙的3个线程的堆栈信息</span></span>
<span class="line"><span>thread -n 3</span></span>
<span class="line"><span># 查看ID为1的线程堆栈信息</span></span>
<span class="line"><span>thread 1</span></span>
<span class="line"><span># 找出当前阻塞其他线程的线程</span></span>
<span class="line"><span>thread -b</span></span>
<span class="line"><span># 查看指定状态的线程</span></span>
<span class="line"><span>thread -state WAITING</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sysprop-命令" tabindex="-1"><a class="header-anchor" href="#sysprop-命令"><span>sysprop 命令</span></a></h3><p>sysprop 命令可以查看和修改 JVM 的系统属性。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109113252.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>支持 TAB 键补全命令哈~</p><h3 id="logger-命令" tabindex="-1"><a class="header-anchor" href="#logger-命令"><span>logger 命令</span></a></h3><p>logger 命令可以查看和修改日志的级别，这个命令非常有用。</p><p>比如说生产环境上一般是不会打印 DEBUG 级别的日志的，但是有时候我们需要打印 DEBUG 级别的日志来排查问题，这个时候就可以使用 logger 命令来修改日志的级别。</p><p>第一步，先用 logger 命令查看默认使用的日志级别：</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109113942.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>第二步，使用这个命令<code>logger --name ROOT --level DEBUG</code>，将日志级别修改为 DEBUG，再次查看日志级别，发现已经修改成功了：</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109114316.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="sc-命令" tabindex="-1"><a class="header-anchor" href="#sc-命令"><span>sc 命令</span></a></h3><p>sc 命令可以查看类的信息，包括类的结构、方法、字段等。</p><p>示例 1：通过 <code>sc com.github.paicoding.forum.web.front.*</code> 查看包下的所有类：</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109114902.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>示例 2：通过 <code>sc -d com.github.paicoding.forum.web.front.home.IndexController</code> 查看类的详细信息：</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109115043.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>示例 3：通过 <code>sc -d -f com.github.paicoding.forum.web.front.home.vo.IndexVo</code> 查看类的字段信息：</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109115332.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="jad-命令" tabindex="-1"><a class="header-anchor" href="#jad-命令"><span>jad 命令</span></a></h3><p>jad 命令可以反编译类的字节码，如果觉得线上代码和预期的不一致，可以反编译看看。</p><p>示例 1：通过 <code>jad com.github.paicoding.forum.web.front.home.IndexController</code> 反编译类的字节码：</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109115544.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="monitor-命令" tabindex="-1"><a class="header-anchor" href="#monitor-命令"><span>monitor 命令</span></a></h3><p>monitor 命令可以监控方法的执行信息，包括执行耗时等信息。</p><p>示例 1：通过 <code>monitor -c 3 com.github.paicoding.forum.web.front.home.IndexController index</code> 监控方法的执行信息，<code>-c</code> 参数表示监控的次数：</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109115828.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="watch-命令" tabindex="-1"><a class="header-anchor" href="#watch-命令"><span>watch 命令</span></a></h3><p>watch 命令可以观察方法执行过程中的参数和返回值。</p><p>示例 1：通过 <code>watch com.github.paicoding.forum.web.front.home.IndexController index</code> 观察方法的执行过程中的参数和返回值：</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109124522.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h2><p>Arthas 非常强大，还有很多插件可以配合使用，比如我们前面提到的 Arthas IDEA 插件，支持的命令还有以下这些：</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109140000.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>文档写得也非常完整，我就不再赘述了，这篇内容也权当一个抛砖引玉。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109140405.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>等后面遇到线上问题了，再用 Arthas 来实战一把，给大家讲一讲。</p><p>推荐阅读：</p><ul><li><a href="https://juejin.cn/post/7291931708920512527" target="_blank" rel="noopener noreferrer">Arthas 的强大</a></li><li><a href="https://juejin.cn/post/6844903999129419790" target="_blank" rel="noopener noreferrer">Arthas 的热部署</a></li><li><a href="https://www.yuque.com/arthas-idea-plugin/help" target="_blank" rel="noopener noreferrer">IDEA Arthas 插件</a></li></ul><hr><p>GitHub 上标星 10000+ 的开源知识库《<a href="https://github.com/itwanger/toBeBetterJavaer" target="_blank" rel="noopener noreferrer">二哥的 Java 进阶之路</a>》第一版 PDF 终于来了！包括Java基础语法、数组&amp;字符串、OOP、集合框架、Java IO、异常处理、Java 新特性、网络编程、NIO、并发编程、JVM等等，共计 32 万余字，500+张手绘图，可以说是通俗易懂、风趣幽默……详情戳：<a href="https://javabetter.cn/overview/" target="_blank" rel="noopener noreferrer">太赞了，GitHub 上标星 10000+ 的 Java 教程</a></p><p>微信搜 <strong>沉默王二</strong> 或扫描下方二维码关注二哥的原创公众号沉默王二，回复 <strong>222</strong> 即可免费领取。</p><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/gongzhonghao.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,86)]))}const c=e(i,[["render",o],["__file","arthas.html.vue"]]),h=JSON.parse('{"path":"/jvm/arthas.html","title":"阿里开源的 Java 诊断神器 Arthas","lang":"zh-CN","frontmatter":{"title":"阿里开源的 Java 诊断神器 Arthas","shortTitle":"JVM 性能监控之 Arthas 篇","category":["Java核心"],"tag":["Java虚拟机"],"description":"本文介绍了阿里开源的 Java 诊断神器 Arthas 的安装和使用。","head":[["meta",{"name":"keywords","content":"Java,JavaSE,教程,二哥的Java进阶之路,jvm,Java虚拟机,arthas"}],["meta",{"property":"og:url","content":"https://javabetter.cn/toBeBetterJavaer/jvm/arthas.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"阿里开源的 Java 诊断神器 Arthas"}],["meta",{"property":"og:description","content":"本文介绍了阿里开源的 Java 诊断神器 Arthas 的安装和使用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109102105.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-13T06:18:01.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java虚拟机"}],["meta",{"property":"article:modified_time","content":"2024-09-13T06:18:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"阿里开源的 Java 诊断神器 Arthas\\",\\"image\\":[\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109102105.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109104013.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109104757.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109105744.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109110348.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109112718.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109113001.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109113252.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109113942.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109114316.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109114902.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109115043.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109115332.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109115544.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109115828.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109124522.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109140000.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109140405.png\\",\\"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/gongzhonghao.png\\"],\\"dateModified\\":\\"2024-09-13T06:18:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"安装 Arthas","slug":"安装-arthas","link":"#安装-arthas","children":[{"level":3,"title":"macOS 安装","slug":"macos-安装","link":"#macos-安装","children":[]},{"level":3,"title":"Linux 安装","slug":"linux-安装","link":"#linux-安装","children":[]},{"level":3,"title":"IDEA Arthas 插件","slug":"idea-arthas-插件","link":"#idea-arthas-插件","children":[]}]},{"level":2,"title":"Arthas 常用命令","slug":"arthas-常用命令","link":"#arthas-常用命令","children":[{"level":3,"title":"dashboard 命令","slug":"dashboard-命令","link":"#dashboard-命令","children":[]},{"level":3,"title":"thread 命令","slug":"thread-命令","link":"#thread-命令","children":[]},{"level":3,"title":"sysprop 命令","slug":"sysprop-命令","link":"#sysprop-命令","children":[]},{"level":3,"title":"logger 命令","slug":"logger-命令","link":"#logger-命令","children":[]},{"level":3,"title":"sc 命令","slug":"sc-命令","link":"#sc-命令","children":[]},{"level":3,"title":"jad 命令","slug":"jad-命令","link":"#jad-命令","children":[]},{"level":3,"title":"monitor 命令","slug":"monitor-命令","link":"#monitor-命令","children":[]},{"level":3,"title":"watch 命令","slug":"watch-命令","link":"#watch-命令","children":[]}]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1704789842000,"updatedTime":1726208281000,"contributors":[{"name":"root","email":"root@instance-tw.asia-east1-b.c.valid-arc-377619.internal","commits":1}]},"readingTime":{"minutes":6.59,"words":1978},"filePathRelative":"jvm/arthas.md","localizedDate":"2024年1月9日","excerpt":"\\n<p>Arthas 是阿里开源的一款线上 Java 诊断神器，通过全局的视角可以查看应用程序的内存、GC、线程等状态信息，并且能够在不修改代码的情况下，对业务问题进行诊断，包括查看方法的参数调用、执行时间、异常堆栈等信息，大大提升了生产环境中问题排查的效率。</p>\\n<p>Arthas 的官方网站是 <a href=\\"https://arthas.aliyun.com/doc/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://arthas.aliyun.com/doc/</a>，目前最新的版本是 3.7.2。</p>\\n<figure><img src=\\"https://cdn.tobebetterjavaer.com/stutymore/arthas-20240109102105.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>"}');export{c as comp,h as data};
