import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,e as a,o as t}from"./app-BeHkqkE2.js";const l={};function n(r,i){return t(),s("div",null,i[0]||(i[0]=[a('<h1 id="mysql-之简单查询" tabindex="-1"><a class="header-anchor" href="#mysql-之简单查询"><span>MySQL 之简单查询</span></a></h1><p>前面我们介绍了如何<a href="https://javabetter.cn/mysql/database.html" target="_blank" rel="noopener noreferrer">创建数据库</a>、<a href="https://javabetter.cn/mysql/table.html" target="_blank" rel="noopener noreferrer">如何创建数据表</a>，那今天我们来结合<a href="https://javabetter.cn/zhishixingqiu/paicoding.html" target="_blank" rel="noopener noreferrer">技术派实战项目</a>的数据来讲讲 MySQL 查询，也就是 <code>SELECT</code> 语句。</p><p>我们先从最简单的 SELECT 查询开始，主打一个循序渐进，以便让大家彻底掌握 SELECT。</p><p>在日常的开发工作中，查询语句也是最常用的，因为表在一开始设计的时候已经确定了，后期很少去修改表结构，也就意味着插入数据的方式也是确定的，但数据的展示方式却千奇百怪，用户端和 admin 管理端可能需要各种各样的数据，那 MySQL 就要提供最接近需求的数据，这样可以节省 Java 程序对数据的转换处理，也就相应提升了程序的性能。</p><p>如何提供最接近需求的数据呢？这就要靠 <code>SELECT</code> 语句了。</p><h2 id="技术派实战项目的数据" tabindex="-1"><a class="header-anchor" href="#技术派实战项目的数据"><span>技术派实战项目的数据</span></a></h2><p>技术派实战项目的代码是开源的，大家可以在<a href="https://github.com/itwanger/paicoding" target="_blank" rel="noopener noreferrer">GitHub</a>进行下载，下载完成后直接在本地运行主程序，就会自动生成对应的数据表。</p><p>当然了，如果你只想要技术派的真实数据，那我也提供了一种渠道，你可以加入<a href="https://javabetter.cn/zhishixingqiu/" target="_blank" rel="noopener noreferrer">二哥的编程星球</a>，找二哥私发最新的数据库文件。之所以这么做，是因为涉及到用户的隐私数据，没法向所有人公开。</p><p>目前技术派实战项目初始启动后的数据表如下所示，article 表是本篇内容主要查询的表对象。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215201036.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果你用 Intellij IDEA 打开技术派的源码，可以在 init_data_221209.sql 文件中看到这些数据的插入语句。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215201501.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>表结构的定义在 init_schema_221209.sql 文件中。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215202135.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>好，初始数据准备完成后，我们就可以开始查询语句的学习了。</p><h2 id="查询单个字段" tabindex="-1"><a class="header-anchor" href="#查询单个字段"><span>查询单个字段</span></a></h2><p>查看某个表的某个字段，格式如下所示：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>比如说，我们想要查看 article 表的 title 字段，那查询语句就是：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> title </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> article;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行这条语句后，我们可以看到下面这些数据。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215202528.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="别名" tabindex="-1"><a class="header-anchor" href="#别名"><span>别名</span></a></h3><p>如果你想要给查询出来的字段起一个别名，可以使用 <code>AS</code> 关键字，格式如下所示：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 别名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>比如说，我们想要给 title 字段起一个别名叫做 <code>文章标题</code>，那查询语句就是：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> title </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;文章标题&#39;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> article;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这通常会在多表进行联合查询或者 Java 程序端和 MySQL 表字段不一致时使用。</p><p>比如说，Java 程序端的字段名是 <code>articleTitle</code>，那我们就可以使用别名来解决这个问题。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> title </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> articleTitle </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> article;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="查询多个字段" tabindex="-1"><a class="header-anchor" href="#查询多个字段"><span>查询多个字段</span></a></h2><p>当结果集中需要多个字段时，可以使用逗号 <code>,</code> 分隔字段进行查询，格式如下所示：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段1, 字段2, 字段3 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>比如说，我们想要查看 article 表的 title、user_id、create_time 字段，那查询语句就是：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> title, user_id, create_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> article;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215203340.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="查询所有字段" tabindex="-1"><a class="header-anchor" href="#查询所有字段"><span>查询所有字段</span></a></h2><p>当结果集中需要查询所有字段时，可以使用 <code>*</code> 通配符进行查询，格式如下所示：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>比如说，我们想要查看 article 表的所有字段，那查询语句就是：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> article;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>由于某些字段的内容较多，我们可以使用 <code>\\G</code> 来查看结果集。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215203501.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>说到 <code>*</code> 通配符，就必须得提一嘴 <code>SELECT COUNT(*)</code> 和 <code>SELECT COUNT(字段名)</code>，以及 <code>SELECT COUNT(1)</code>，是面试中经常考察的一个知识点，我们后面会专门抽出来一篇帖子来讲，这里先放个传送门。</p><p><a href="https://javabetter.cn/mysql/select-count.html" target="_blank" rel="noopener noreferrer">COUNT(*)、COUNT(字段名)、COUNT(1) 之间的区别</a></p><p>当然了，并不建议使用 <code>*</code> 通配符，因为这样会导致查询出来的字段过多，而且不利于程序的性能优化，尽量按需查询字段，就是当前需要什么字段就查询什么字段，不够用的话，再添加字段。</p><p>从根源上减轻数据传输的负载，是我们在编写代码时应该遵守的好习惯。</p><h2 id="查询结果去重" tabindex="-1"><a class="header-anchor" href="#查询结果去重"><span>查询结果去重</span></a></h2><p>当结果集中需要去重时，可以使用 <code>DISTINCT</code> 关键字进行查询，格式如下所示：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT DISTINCT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>比如说，我们想要查看 tag 表的所有标签，那查询语句就是：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT DISTINCT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tag_name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tag;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215204633.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="查询结果排序" tabindex="-1"><a class="header-anchor" href="#查询结果排序"><span>查询结果排序</span></a></h2><p>当结果集中需要排序时，可以使用 <code>ORDER BY</code> 关键字进行查询，格式如下所示：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ORDER BY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段名 </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[ASC|DESC]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>ASC 是升序，DESC 是降序，默认是升序。</p><p>比如说，我们想要查看 article 表的 title 字段，并按照 create_time 字段进行降序排序，那查询语句就是：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> title,create_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> article </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ORDER BY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> create_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">DESC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215204911.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果需要按照多个字段排序，可以使用逗号 <code>,</code> 分隔字段进行排序。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段1, 字段2 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ORDER BY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段1 </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[ASC|DESC]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, 字段2 </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[ASC|DESC]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>比如说，我们想要查看 article 表的 title 字段，并按照 create_time 字段进行降序排序，如果 create_time 字段相同的话，再按照 update_time 字段进行升序排序，那查询语句就是：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> title,create_time,update_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> article </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ORDER BY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> create_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">DESC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, update_time </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ASC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215205249.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="查询结果限制条数" tabindex="-1"><a class="header-anchor" href="#查询结果限制条数"><span>查询结果限制条数</span></a></h2><p>当结果集中需要限制返回的行数时，可以使用 <code>LIMIT</code> 关键字进行查询，格式如下所示：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 字段名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 表名 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">LIMIT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 开始行,行数;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>开始行也叫偏移量（OFFSET），默认是 0，可以缺省。</p></blockquote><p>比如说，我们想要查看 article 表的 title 字段，并限制返回 5 条数据，那查询语句就是：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> title </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> article </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">LIMIT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>LIMIT 对于分页查询非常有用，比如说，我们想要查看 article 表的 title 字段，并限制返回 5 条数据，从第 6 条数据开始，那查询语句就是：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> title </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> article </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">LIMIT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>开始行为 5 是因为数据集在计数的时候是以 0 开始的。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215205915.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>不过，使用 LIMIT 和大偏移量（OFFSET）进行分页时，MySQL 需要读取从开始到偏移量指定的行数的所有数据，然后丢弃前面所有的行，只返回指定范围内的数据。这意味着，随着 OFFSET 值的增加，性能会逐渐下降。对于大数据量的表，这会导致查询变得非常慢。</p><p>这里我们也留一个传送门：</p><p><a href="https://javabetter.cn/mysql/select-limit-offset.html" target="_blank" rel="noopener noreferrer">MySQL 分页查询：为什么 LIMIT OFFSET 性能会逐渐下降？</a></p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h2><p>今天我们学习了 MySQL 的简单查询，主要包括了查询单个字段、查询多个字段、查询所有字段、查询结果去重、查询结果排序、查询结果限制条数。</p><p>虽然很基础，但留了两个需要深度探讨的知识点，一个是 COUNT(*)、COUNT(字段名)、COUNT(1) 之间的区别，另一个是 LIMIT OFFSET 性能逐渐下降的原因。</p><p>这些简单查询在日常开发中其实已经不需要我们手动去实现了，因为有很多持久层框架会帮我们做这些事情。</p><p>比如说，技术派当中就使用了 MyBatis-Plus 框架，它提供了很多便捷的查询方法，比如说 <code>selectById</code>、<code>selectList</code>、<code>selectPage</code> 等等，这些方法都是基于 <code>SELECT</code> 语句的封装。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215211609.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>大家如果对 MyBatis-Plus 的源码感兴趣的话，可以研究一下它的 <code>selectById</code> 方法，看看它是如何封装 <code>SELECT</code> 语句的。</p><p>虽然有持久层框架的帮助，但我们还是需要掌握 SQL 语句的基本用法，因为有些复杂的查询，持久层框架可能无法满足我们的需求，这时候就需要我们手动编写 SQL 语句了。</p><figure><img src="https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215212425.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>好了，今天的内容就到这里，希望新手都能够按照教程实操一遍，加深对 SELECT 语句的理解。</p><hr><p>GitHub 上标星 10000+ 的开源知识库《<a href="https://github.com/itwanger/toBeBetterJavaer" target="_blank" rel="noopener noreferrer">二哥的 Java 进阶之路</a>》第一版 PDF 终于来了！包括Java基础语法、数组&amp;字符串、OOP、集合框架、Java IO、异常处理、Java 新特性、网络编程、NIO、并发编程、JVM等等，共计 32 万余字，500+张手绘图，可以说是通俗易懂、风趣幽默……详情戳：<a href="https://javabetter.cn/overview/" target="_blank" rel="noopener noreferrer">太赞了，GitHub 上标星 10000+ 的 Java 教程</a></p><p>微信搜 <strong>沉默王二</strong> 或扫描下方二维码关注二哥的原创公众号沉默王二，回复 <strong>222</strong> 即可免费领取。</p><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/gongzhonghao.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',92)]))}const d=e(l,[["render",n],["__file","select-simple.html.vue"]]),k=JSON.parse('{"path":"/mysql/select-simple.html","title":"MySQL 之简单查询：开始踏上 SELECT 之旅","lang":"zh-CN","frontmatter":{"title":"MySQL 之简单查询：开始踏上 SELECT 之旅","shortTitle":"MySQL 之简单查询","description":"MySQL 之简单查询 前面我们介绍了如何创建数据库、如何创建数据表，那今天我们来结合技术派实战项目的数据来讲讲 MySQL 查询，也就是 SELECT 语句。 我们先从最简单的 SELECT 查询开始，主打一个循序渐进，以便让大家彻底掌握 SELECT。 在日常的开发工作中，查询语句也是最常用的，因为表在一开始设计的时候已经确定了，后期很少去修改表结...","head":[["meta",{"property":"og:url","content":"https://javabetter.cn/toBeBetterJavaer/mysql/select-simple.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"MySQL 之简单查询：开始踏上 SELECT 之旅"}],["meta",{"property":"og:description","content":"MySQL 之简单查询 前面我们介绍了如何创建数据库、如何创建数据表，那今天我们来结合技术派实战项目的数据来讲讲 MySQL 查询，也就是 SELECT 语句。 我们先从最简单的 SELECT 查询开始，主打一个循序渐进，以便让大家彻底掌握 SELECT。 在日常的开发工作中，查询语句也是最常用的，因为表在一开始设计的时候已经确定了，后期很少去修改表结..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215201036.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-13T06:18:01.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:modified_time","content":"2024-09-13T06:18:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL 之简单查询：开始踏上 SELECT 之旅\\",\\"image\\":[\\"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215201036.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215201501.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215202135.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215202528.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215203340.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215203501.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215204633.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215204911.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215205249.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215205915.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215211609.png\\",\\"https://cdn.tobebetterjavaer.com/stutymore/select-simple-20240215212425.png\\",\\"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/gongzhonghao.png\\"],\\"dateModified\\":\\"2024-09-13T06:18:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"技术派实战项目的数据","slug":"技术派实战项目的数据","link":"#技术派实战项目的数据","children":[]},{"level":2,"title":"查询单个字段","slug":"查询单个字段","link":"#查询单个字段","children":[{"level":3,"title":"别名","slug":"别名","link":"#别名","children":[]}]},{"level":2,"title":"查询多个字段","slug":"查询多个字段","link":"#查询多个字段","children":[]},{"level":2,"title":"查询所有字段","slug":"查询所有字段","link":"#查询所有字段","children":[]},{"level":2,"title":"查询结果去重","slug":"查询结果去重","link":"#查询结果去重","children":[]},{"level":2,"title":"查询结果排序","slug":"查询结果排序","link":"#查询结果排序","children":[]},{"level":2,"title":"查询结果限制条数","slug":"查询结果限制条数","link":"#查询结果限制条数","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1706876848000,"updatedTime":1726208281000,"contributors":[{"name":"root","email":"root@instance-tw.asia-east1-b.c.valid-arc-377619.internal","commits":1}]},"readingTime":{"minutes":7.56,"words":2267},"filePathRelative":"mysql/select-simple.md","localizedDate":"2024年2月2日","excerpt":"\\n<p>前面我们介绍了如何<a href=\\"https://javabetter.cn/mysql/database.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">创建数据库</a>、<a href=\\"https://javabetter.cn/mysql/table.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">如何创建数据表</a>，那今天我们来结合<a href=\\"https://javabetter.cn/zhishixingqiu/paicoding.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">技术派实战项目</a>的数据来讲讲 MySQL 查询，也就是 <code>SELECT</code> 语句。</p>","autoDesc":true}');export{d as comp,k as data};
